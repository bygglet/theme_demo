import 'package:flutter/material.dart';

class TextPage extends StatelessWidget {
  const TextPage({Key? key}) : super(key: key);

  void _switchTheme() {}
  final bool custom = true;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Text'),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _switchTheme,
        child: const Icon(Icons.auto_awesome),
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: const [
            Padding(
              padding: EdgeInsets.all(8.0),
              child: Headlines(),
            ),
            Divider(),
            Padding(
              padding: EdgeInsets.all(8.0),
              child: Subtitles(),
            ),
            Divider(),
            Padding(
              padding: EdgeInsets.all(8.0),
              child: BodyText1(),
            ),
            Padding(
              padding: EdgeInsets.all(8.0),
              child: BodyText2(),
            ),
            Divider(),
            Padding(
              padding: EdgeInsets.all(8.0),
              child: NewsStory(),
            ),
          ],
        ),
      ),
    );
  }
}

class NewsStory extends StatelessWidget {
  const NewsStory({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SelectableText(
          '1970-01-01',
          style: Theme.of(context).textTheme.overline,
        ),
        SelectableText(
          'Breaking news!',
          style: Theme.of(context).textTheme.headline4,
        ),
        SelectableText(
          'Troll News Factory',
          style: Theme.of(context).textTheme.subtitle2,
        ),
        const SizedBox(
          height: 16,
        ),
        SelectableText(
          'I\'m baby direct trade etsy kitsch, four loko cred celiac try-hard vegan. Bespoke lomo live-edge cred portland offal humblebrag semiotics chia banjo 8-bit blog ramps. Fingerstache lomo pok pok truffaut artisan vegan waistcoat photo booth shoreditch humblebrag YOLO hoodie chambray. Gluten-free farm-to-table vape iPhone. Lo-fi coloring book microdosing jianbing +1 listicle, semiotics vape jean shorts mlkshk hammock air plant gastropub. Fanny pack offal hell of cornhole banjo.',
          style: Theme.of(context)
              .textTheme
              .bodyText1
              ?.copyWith(fontWeight: FontWeight.bold),
        ),
        const SizedBox(
          height: 8,
        ),
        const SelectableText(
          'Jianbing tumeric man bun artisan, single-origin coffee blog four dollar toast polaroid mlkshk raw denim mustache gastropub everyday carry brunch. Next level migas art party flannel, forage pork belly affogato activated charcoal tousled man braid coloring book. Gluten-free waistcoat put a bird on it, taiyaki kinfolk vinyl pinterest pitchfork freegan occupy unicorn. Lo-fi gastropub hella fashion axe man braid.',
        ),
        const SizedBox(
          height: 8,
        ),
        SelectableText(
          'Text generated by hipsum.co',
          style: Theme.of(context).textTheme.caption,
        )
      ],
    );
  }
}

class BodyText2 extends StatelessWidget {
  const BodyText2({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'BodyText2 Pabst stumptown cred slow-carb jean shorts. Meditation cold-pressed copper mug meh vape hexagon coloring book whatever vice authentic. Typewriter leggings adaptogen mixtape next level subway tile bespoke, gentrify kinfolk PBR&B. Lomo XOXO cloud bread taiyaki prism roof party poke locavore celiac. Vexillologist single-origin coffee shoreditch intelligentsia, fanny pack pour-over tbh bespoke authentic heirloom taxidermy ramps kitsch.',
          style: Theme.of(context).textTheme.bodyText2,
        )
      ],
    );
  }
}

class BodyText1 extends StatelessWidget {
  const BodyText1({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'BodyText1 Pabst stumptown cred slow-carb jean shorts. Meditation cold-pressed copper mug meh vape hexagon coloring book whatever vice authentic. Typewriter leggings adaptogen mixtape next level subway tile bespoke, gentrify kinfolk PBR&B. Lomo XOXO cloud bread taiyaki prism roof party poke locavore celiac. Vexillologist single-origin coffee shoreditch intelligentsia, fanny pack pour-over tbh bespoke authentic heirloom taxidermy ramps kitsch.',
          style: Theme.of(context).textTheme.bodyText1,
        )
      ],
    );
  }
}

class Subtitles extends StatelessWidget {
  const Subtitles({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'Subtitle 1',
          style: Theme.of(context).textTheme.subtitle1,
        ),
        Text(
          'Subtitle 2',
          style: Theme.of(context).textTheme.subtitle2,
        ),
        Text(
          'Caption',
          style: Theme.of(context).textTheme.caption,
        ),
        Text(
          'Button',
          style: Theme.of(context).textTheme.button,
        ),
        Text(
          'Overline',
          style: Theme.of(context).textTheme.overline,
        ),
      ],
    );
  }
}

class Headlines extends StatelessWidget {
  const Headlines({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'Headline 1',
          style: Theme.of(context).textTheme.headline1,
        ),
        Text(
          'Headline 2',
          style: Theme.of(context).textTheme.headline2,
        ),
        Text(
          'Headline 3',
          style: Theme.of(context).textTheme.headline3,
        ),
        Text(
          'Headline 4',
          style: Theme.of(context).textTheme.headline4,
        ),
        Text(
          'Headline 5',
          style: Theme.of(context).textTheme.headline5,
        ),
        Text(
          'Headline 6',
          style: Theme.of(context).textTheme.headline6,
        ),
      ],
    );
  }
}
